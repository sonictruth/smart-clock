{"version":3,"sources":["config.ts","store.ts","screens/components/Time.tsx","screens/MediaPlayer.tsx","screens/components/Weather.tsx","screens/MainScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","updateIntervalSeconds","youtubePlaylistURL","mediaPlayerStreams","name","url","weather","key","locationLabel","lat","lon","lang","unit","weatherConfig","useStore","create","set","setWeather","a","fetch","response","json","setInterval","date","Date","Time","time","state","pad","getHours","getMinutes","number","String","padStart","className","MediaPlayer","playerRef","useRef","useState","volume","setVolume","playing","setPlaying","setURL","useEffect","handleStopPropagating","event","stopPropagation","ref","width","height","controls","loop","onReady","onStart","onTouchEnd","onMouseUp","type","min","max","step","value","onChange","parseFloat","target","onClick","screenfull","isEnabled","current","el","node","findDOMNode","request","map","stream","Weather","description","backgrounds","MainScreen","routes","path","component","getRandomBackgrounnd","backgroundURL","setBackgroundURL","Math","floor","random","length","timerID","backggroundUpdateIntervalSeconds","clearInterval","style","backgroundImage","process","App","React","touchStart","setTouchStart","touchEnd","setTouchEnd","history","useHistory","getPosition","clientX","targetTouches","handleTouchStart","handleTouchMove","handleTouchEnd","currentLocation","location","pathname","currentLocationRouteIndex","findIndex","route","nextLocationRouteIndex","push","onMouseDown","onMouseMove","onTouchMove","onTouchStart","i","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8862a4eb.chunk.js","sourcesContent":["const config = {\n\n    updateIntervalSeconds: 18000,\n\n    youtubePlaylistURL: 'https://www.youtube.com/embed/videoseries?list=PLywsZdsYYHTZNdHTYDNooq86TCJLPCjoK',\n\n    mediaPlayerStreams: [\n        {\n            name: 'iCat',\n            url: 'https://directes-radio-int.ccma.cat/int/mp4:icatfm/playlist.m3u8'\n        },\n        {\n            name: 'Live Youtube',\n            url: 'https://www.youtube.com/embed/videoseries?list=PLywsZdsYYHTZNdHTYDNooq86TCJLPCjoK',\n        },\n    ],\n    // TODO: Move to env variable\n    weather: {\n        key: '5a7cef30eb5cb1750171f99e9988dc7d',\n        locationLabel: 'Barcelona',\n        lat: 41.376681,\n        lon: 2.176177,\n        lang: 'en',\n        unit: 'metric'\n    }\n}\n\nexport default config;\n","import create from 'zustand';\nimport config from './config';\n\nconst weatherConfig = config.weather;\nconst key = weatherConfig.key;\nconst lat = weatherConfig.lat;\nconst lon = weatherConfig.lon;\n\nconst useStore = create(\n    set => {\n        async function setWeather() {\n\n            const response =\n                await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,hourly&appid=${key}`);;\n            set({ weather: await response.json() });\n        };\n        /* xxxdd*/\n        setInterval(() => set({ date: new Date() }), 1000);\n        setInterval(() => setWeather(), config.updateIntervalSeconds * 1000);\n        setWeather();\n        return ({ date: new Date(), weather: null })\n    })\n\nexport default useStore;\n","import './Time.scss';\nimport useStore from '../../store';\n\nfunction Time() {\n    const time = useStore((state: any) => {\n        const date = state.date;\n        return pad(date.getHours()) + ':' + pad(date.getMinutes());\n    });\n\n    function pad(number: number) {\n        return String(number).padStart(2, '0');\n    }\n    return <div className=\"Time\">\n        {time}\n    </div>;\n}\n\nexport default Time;","import React, {\n    useRef,\n    useState,\n    useEffect,\n} from 'react';\nimport Time from './components/Time';\nimport ReactPlayer from 'react-player';\nimport { findDOMNode } from 'react-dom';\nimport screenfull from 'screenfull';\nimport config from '../config';\nimport './MediaPlayer.scss';\n\nfunction MediaPlayer() {\n    const playerRef = useRef(null);\n    const [volume, setVolume] = useState(1);\n    const [playing, setPlaying] = useState(false);\n    const [url, setURL] = useState(config.mediaPlayerStreams[0].url);\n\n    useEffect(() => {\n\n\n    }, []);\n\n    const handleVolumeChange = (event: any) => {\n        setVolume(parseFloat(event.target.value));\n    }\n\n    const handleStopPropagating = (event: any) =>\n        event.stopPropagation();\n\n\n    const handleClickFullscreen = () => {\n        if (screenfull.isEnabled) {\n            if (playerRef.current) {\n                const el = playerRef.current;\n                const node = findDOMNode(el);\n                screenfull.request(node as Element);\n            }\n        }\n    }\n\n    return <div className=\"MediaPlayer\" >\n        <div className=\"MediaPlayerScreen\">\n            <ReactPlayer\n                ref={playerRef}\n                className='react-player'\n                width='100%'\n                height='100%'\n                url={url}\n                playing={playing}\n                controls={false}\n                loop={true}\n                volume={volume}\n                onReady={() => setPlaying(true)}\n                onStart={() => { }}\n            />\n        </div>\n        <div className=\"MediaPlayerTime\">\n            <Time />\n        </div>\n        <div className=\"MediaPlayerControls\"\n            onTouchEnd={handleStopPropagating}\n            onMouseUp={handleStopPropagating}\n        >\n            <input type='range'\n                min={0} max={1}\n                step='any'\n                value={volume}\n                onChange={handleVolumeChange} />\n            <br />\n            <button onClick={handleClickFullscreen}>Fullscreen</button>\n            <br />\n            <ul>\n                {config.mediaPlayerStreams.map((stream: any, key: number) =>\n                    <li key={key} >\n                        <button onClick={() => setURL(stream.url)}>{stream.name}</button>\n                    </li>\n                )}\n            </ul>\n\n        </div>\n    </div>;\n}\n\nexport default MediaPlayer;\n","import useStore from '../../store';\nimport './Weather.scss';\n\nfunction Weather() {\n\n    const weather:any = useStore((state: any) => state.weather);\n\n    return (\n        <div className=\"Weather\">\n            {weather &&\n                <div>\n{weather.current.weather[0].description}\n                </div>}\n        </div>\n    );\n}\n\nexport default Weather;","import './MainScreen.scss';\nimport Time from './components/Time';\nimport Weather from './components/Weather';\nimport { useState, useEffect } from 'react';\n\nconst backgrounds = [\n    'v1.gif',\n    'v2.gif',\n    'v4.gif',\n    'v5.gif',\n    'v6.gif',\n    'v7.gif',\n    'v8.gif',\n    'v9.gif',\n    'v10.gif',\n    'v11.gif',\n    'v12.gif',\n    'v13.gif',\n];\n\nconst backggroundUpdateIntervalSeconds = 100;\n\nfunction MainScreen() {\n    const [backgroundURL, setBackgroundURL] = useState(getRandomBackgrounnd());\n\n    useEffect(() => {\n        const timerID = setInterval(() => setBackgroundURL(\n            getRandomBackgrounnd()),\n            backggroundUpdateIntervalSeconds * 1000\n        );\n\n        return function cleanup() {\n            clearInterval(timerID);\n        };\n    });\n\n    function getRandomBackgrounnd() {\n        return backgrounds[Math.floor(Math.random() * backgrounds.length)];\n    }\n    return <div style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/backgrounds/${backgroundURL})` }} className=\"MainScreen\">\n        <div className=\"top\">\n            <Time />\n        </div>\n        <div className=\"bottom\">\n            <Weather />\n        </div>\n    </div>;\n}\n\nexport default MainScreen;","import './App.scss';\nimport React from 'react';\nimport {\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom';\n\nimport MediaPlayer from './screens/MediaPlayer';\nimport MainScreen from './screens/MainScreen';\n\nconst config = {\n  routes: [\n    /*\n    {\n        path: \"/YouToubePlayer\",\n        component: YouToubePlayer,\n    },\n    */\n    {\n        path: \"/MediaPlayer\",\n        component: MediaPlayer,\n    },\n    {\n        path: \"/\",\n        component: MainScreen\n    },\n  ],\n}\n\nfunction App() {\n  const [touchStart, setTouchStart] = React.useState(0);\n  const [touchEnd, setTouchEnd] = React.useState(0);\n  const history = useHistory();\n\n  const getPosition = (event: any): number =>\n    event.clientX || event.targetTouches[0].clientX;\n\n  const handleTouchStart = (event: any) => {\n    setTouchStart(getPosition(event));\n    setTouchEnd(getPosition(event));\n  }\n    \n  const handleTouchMove = (event: any) => {\n    setTouchEnd(getPosition(event));\n  }\n\n  const handleTouchEnd = (event: any) => {\n\n   \n\n    const currentLocation = history.location.pathname;\n    const currentLocationRouteIndex = config.routes.findIndex(\n      (route: any) =>\n        route.path === currentLocation\n    );\n\n    let nextLocationRouteIndex = null;\n\n    if (touchStart - touchEnd > 50) {\n      nextLocationRouteIndex = currentLocationRouteIndex - 1;\n      if (nextLocationRouteIndex < 0) {\n        nextLocationRouteIndex = config.routes.length - 1;\n      }\n      \n    };\n\n    if (touchStart - touchEnd < -50) {\n      nextLocationRouteIndex = currentLocationRouteIndex + 1;\n      if (nextLocationRouteIndex > config.routes.length - 1) {\n        nextLocationRouteIndex = 0;\n      }\n     \n    }\n\n    if(nextLocationRouteIndex !== null) {\n      history.push(config.routes[nextLocationRouteIndex].path);\n    }\n    setTouchStart(0);\n\n  }\n  return (\n    <div className=\"App\"\n      onMouseDown={handleTouchStart}\n      onMouseMove={handleTouchMove}\n      onMouseUp={handleTouchEnd}\n\n      onTouchEnd={handleTouchEnd}\n      onTouchMove={handleTouchMove}\n      onTouchStart={handleTouchStart}\n    >\n      <Switch>\n        {config.routes.map((route: any, i: number) => (\n          <Route\n            key={i}\n            path={route.path}\n            render={props => (\n              <route.component {...props} routes={route.routes} />\n            )}\n          />\n        ))}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}