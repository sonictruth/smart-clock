{"version":3,"sources":["config.ts","store.ts","screens/components/Time.tsx","screens/components/Weather.tsx","screens/MediaPlayer.tsx","screens/MainScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","backgroundImageUpdateIntervalSeconds","mediaPlayerStreams","id","name","url","isRadio","a","fetch","response","text","playlist","split","find","line","includes","weather","apiURL","process","REACT_APP_OPEN_WEATHER_URL","apiKey","REACT_APP_OPEN_WEATHER_KEY","latitude","longitude","units","tempSymbol","lang","weatherUpdateIntervalSeconds","weatherConfig","weatherUpdateIntervalMs","getCoordinates","Promise","resolve","reject","timeout","setTimeout","navigator","geolocation","getCurrentPosition","position","clearTimeout","getLocation","location","coords","console","error","useStore","create","set","setWeather","params","URLSearchParams","lat","toString","lon","exclude","appid","callURL","json","setInterval","date","Date","Time","time","state","toLocaleTimeString","timeStyle","className","temperatureSymbol","getFormatedTemperature","temp","Math","round","parseFloat","Weather","MediaPlayerState","props","metersPerSecond","isSimple","simple","current","iconId","humidity","wind_speed","daily","map","day","key","ts","dt","toLocaleDateString","weekday","alerts","alert","start","toLocaleString","undefined","dayPeriod","event","streamIDLocalStorageKey","MediaPlayer","setTimeoutReplayRef","useRef","useState","localStorage","getItem","streamID","setSteamID","Stopped","mediaPlayerState","setMediaPlayerState","volume","setVolume","streams","setStreams","currentStream","setCurrentSteam","streamURL","setStreamURL","useEffect","urlSearchParams","window","search","Object","fromEntries","entries","loadPlaylist","stream","hasError","Loading","Error","retryStream","reduce","acc","curr","index","length","streamNameAndUrl","push","replace","disableTouchProps","onTouchEnd","stopPropagation","onMouseUp","Playing","width","height","playing","controls","loop","onPlay","onError","errorObject","errorInfo","details","handleReactPlayerError","type","min","max","step","value","onChange","target","setItem","handleChannelSelection","backgrounds","Array","from","keys","MainScreen","routes","path","Component","getRandomBackground","backgroundURL","setBackgroundURL","floor","random","timerID","clearInterval","style","backgroundImage","App","swipeDirection","setSwipeDirection","touchPositionsRef","end","history","useHistory","useLocation","getPosition","clientX","targetTouches","handleTouchStart","handleTouchMove","handleTouchEnd","currentLocation","pathname","touchPositions","currentLocationRouteIndex","findIndex","route","nextLocationRouteIndex","onMouseDown","onMouseMove","onTouchMove","onTouchStart","TransitionGroup","component","CSSTransition","classNames","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe64a440.chunk.js","sourcesContent":["const config: Config = {\n\n    backgroundImageUpdateIntervalSeconds: 600,\n    \n    mediaPlayerStreams: [\n        {\n            id: '10',\n            name: 'EuroNews',\n            url: 'https://www.youtube.com/watch?v=sPgqEHsONK8',\n            isRadio: false,\n        },\n        {\n            id: '20',\n            name: 'Al Jazeera',\n            url: 'https://www.youtube.com/watch?v=-upyPouRrB8',\n            isRadio: false,\n        },\n        {\n            id: '30',\n            name: 'Sky News',\n            url: 'https://www.youtube.com/watch?v=9Auq9mYxFEE',\n            isRadio: false,\n        },\n        // Stream pre-processing for handling tokens, scraping, selecting specific streams \n        {\n            id: '150',\n            name: 'Digi 24 Low',\n            url: async () => {\n                const response =\n                    await fetch('https://dai.google.com/linear/hls/event/OQfdjUhHSDSlb1fJVzehsQ/master.m3u8');\n                const playlist =\n                    await response.text();\n                const url = playlist\n                    .split('\\n')\n                    .find(line => line.includes('bandwidth/2917391.m3u8'));\n                return url;\n            },\n            isRadio: false,\n        },\n        {\n            id: '40',\n            name: 'Digi24',\n            url: 'https://dai.google.com/linear/hls/event/OQfdjUhHSDSlb1fJVzehsQ/master.m3u8',\n            isRadio: false,\n        },\n        {\n            id: '50',\n            name: 'TVRi',\n            url: 'https://mn-nl.mncdn.com/tvri_test/smil:tvri_test.smil/playlist.m3u8',\n            isRadio: false,\n        },\n        {\n            id: '60',\n            name: '3/24',\n            url: 'https://directes-tv-int.ccma.cat/int/ngrp:324_web/chunklist_b1728000.m3u8',\n            isRadio: false,\n        },\n        {\n            id: '70',\n            name: 'PrimaTV',\n            url: 'https://stream1.1616.ro:1945/prima/livestream/playlist.m3u8?wowzatokenhash=hOdIznDoakApEuQ8FaFI3yrJuBMZHqCB7B3cWTmRWsc=',\n            isRadio: false,\n        },\n        {\n            id: '80',\n            name: 'Antena 3',\n            url: 'https://ivm.antenaplay.ro/live/a3/playlist.m3u8',\n            isRadio: false,\n        },\n        {\n            id: '90',\n            name: 'Antena 1',\n            url: 'https://ivm.antenaplay.ro/live/a1/playlist.m3u8',\n            isRadio: false,\n        },\n        {\n            id: '100',\n            name: 'Radio 3',\n            url: 'https://rtvelivestreamv3.akamaized.net/rne_r3_main.m3u8',\n            isRadio: true,\n        },\n        {\n            id: '110',\n            name: 'iCat',\n            url: 'https://directes-radio-int.ccma.cat/int/mp4:icatfm/playlist.m3u8',\n            isRadio: true,\n        },\n        {\n            id: '120',\n            name: 'RadioParadise',\n            url: 'http://stream.radioparadise.com/aac-128',\n            isRadio: true,\n        },\n        {\n            id: '130',\n            name: 'LoFi',\n            url: 'https://www.youtube.com/watch?v=5qap5aO4i9A',\n            isRadio: false,\n        },\n        // Weekly updated yourube playlist\n        {\n            id: '140',\n            name: 'UK Weekly Playlist',\n            url: 'https://youtube.com/playlist?list=PLx0sYbCqOb8Q_CLZC2BdBSKEEB59BOPUM',\n            isRadio: false,\n        },\n    ],\n\n    weather: {\n        apiURL: process.env.REACT_APP_OPEN_WEATHER_URL || 'https://www.sonicpix.ro/owproxy/',\n        apiKey: process.env.REACT_APP_OPEN_WEATHER_KEY || 'nokey',\n        latitude: 41.376681,\n        longitude: 2.176177,\n        units: 'metric',\n        tempSymbol: '°C',\n        lang: 'en',\n        weatherUpdateIntervalSeconds: 3600,\n    }\n}\n\nexport default config;\n","import create from 'zustand';\nimport config from './config';\n\nconst weatherConfig = config.weather;\nconst weatherUpdateIntervalMs = weatherConfig.weatherUpdateIntervalSeconds * 1000;\nconst apiKey = weatherConfig.apiKey;\nconst apiURL = weatherConfig.apiURL;\nconst positionTimeoutMs = 5000;\n\nasync function getCoordinates() {\n    return new Promise((resolve, reject) => {\n        const timeout = setTimeout(() => reject(), positionTimeoutMs);;\n        navigator.geolocation.getCurrentPosition(position => {\n            clearTimeout(timeout);\n            resolve(position);\n        }, reject);\n    });\n}\n\nasync function getLocation() {\n    const location = {\n        latitude: weatherConfig.latitude,\n        longitude: weatherConfig.longitude\n    }\n    try {\n        const position: any = await getCoordinates();\n        location.latitude = position.coords.latitude;\n        location.longitude = position.coords.longitude;\n    } catch (error) {\n        console.error('Unable to get location', error);\n    }\n    return location;\n}\n\nconst useStore = create(\n    set => {\n        async function setWeather() {\n\n            const location = await getLocation();\n\n            const params = new URLSearchParams({\n                units: weatherConfig.units,\n                lang: weatherConfig.lang,\n                lat: location.latitude.toString(),\n                lon: location.longitude.toString(),\n                exclude: 'minutely,hourly',\n                appid: apiKey,\n            }).toString()\n\n            const callURL = `${apiURL}?${params}`;\n            const response = await fetch(callURL);\n\n            set({ weather: await response.json() });\n        };\n\n        setInterval(() => set({ date: new Date() }), 1000);\n        setInterval(() => setWeather(), weatherUpdateIntervalMs);\n        setWeather();\n        return ({ date: new Date(), weather: null })\n    })\n\n\nexport default useStore;\n","import './Time.scss';\nimport useStore from '../../store';\n\nfunction Time() {\n    const time = useStore((state: any) =>\n        state.date.toLocaleTimeString('en-GB', { timeStyle: 'short' })\n    );\n\n    return <div className=\"Time\">\n        {time}\n    </div>;\n}\n\nexport default Time;","import useStore from '../../store';\nimport WeatherIcon from 'react-icons-weather';\nimport './Weather.scss';\nimport config from '../../config';\n\nconst temperatureSymbol: string = config.weather.tempSymbol;\n\nfunction getDayPeriodFromUnixTS(ts: number): string {\n    return new Date(ts * 1000).toLocaleString(\n        undefined, { weekday: 'long', dayPeriod: 'short' }\n    )\n}\n\nfunction getDayOfWeeekeStringFromUnixTS(ts: number) {\n    return new Date(ts * 1000).toLocaleDateString(\n        'en', { weekday: 'short', day: 'numeric' }\n    )\n}\n\nfunction getKmPerHourFromMetersPerSecond(metersPerSecond: string) {\n    return Math.round(\n        (parseFloat(metersPerSecond) * 3.6)\n    ).toString() + 'Km/h';\n}\n\nfunction getFormatedTemperature(temp: string) {\n    return Math.round(parseFloat(temp)) + temperatureSymbol;\n}\n\nfunction Weather(props: any) {\n    const weather: any = useStore((state: any) => state.weather);\n\n    const isSimple: boolean = props.simple;\n\n    return (\n        <div className=\"Weather\">\n            {!weather && <div>Loading...</div>}\n            {weather && weather.current &&\n                (isSimple ?\n                    <div>\n                        <WeatherIcon\n                            name=\"owm\"\n                            iconId={weather.current.weather[0].id.toString()} />\n                        &nbsp;&nbsp;\n                        {getFormatedTemperature(weather.current.temp)}\n                    </div>\n                    :\n                    <div className=\"WeatherBackground\">\n                        <div className=\"WeatherCurrent\">\n                            <div className=\"columns is-mobile\">\n                                <div className=\"column WeatherHumidity\">\n                                    H: {weather.current.humidity}%\n                                </div>\n\n                                <div className=\"column\">\n                                    <WeatherIcon\n                                        name=\"owm\"\n                                        iconId={weather.current.weather[0].id.toString()} />\n                                    &nbsp;&nbsp;\n                                    {getFormatedTemperature(weather.current.temp)}\n                                </div>\n\n                                <div className=\"column WeatherWind\">\n                                    W: {getKmPerHourFromMetersPerSecond(weather.current.wind_speed)}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"WeatherDaily\">\n                            <div className=\"columns is-mobile\">\n                                {weather.daily.map((day: any, key: number) =>\n                                    <div key={key}\n                                        className=\"column\">\n                                        <div>{getDayOfWeeekeStringFromUnixTS(day.dt)}</div>\n                                        <div className=\"WeatherIcon\"><WeatherIcon\n                                            name=\"owm\"\n                                            iconId={day.weather[0].id.toString()} /></div>\n                                        <div>\n                                            {getFormatedTemperature(day.temp.day)}\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"WeatherAlerts\">\n                            {weather.alerts && weather.alerts.map(\n                                (alert: any, key: number) =>\n                                    key === 0 && <div key={key}>\n                                        {getDayPeriodFromUnixTS(alert.start)}: {alert.event}.\n                                    </div>\n                            )}\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n    );\n}\n\nexport default Weather;","import {\n    useEffect,\n    useState,\n    useRef,\n} from 'react';\nimport Time from './components/Time';\nimport Weather from './components/Weather';\nimport ReactPlayer from 'react-player';\nimport config from '../config';\nimport './MediaPlayer.scss';\n\nconst streamIDLocalStorageKey = 'streamID';\n\nconst streamErrorRetryMs = 5000;\n\nenum MediaPlayerState {\n    Loading = 'loading',\n    Error = 'error',\n    Playing = 'playing',\n    Stopped = 'stopped',\n}\n\nfunction MediaPlayer() {\n\n    const setTimeoutReplayRef = useRef();\n\n    const [streamID, setSteamID] = useState(\n        localStorage.getItem(streamIDLocalStorageKey)\n    );\n\n    const [mediaPlayerState, setMediaPlayerState] =\n        useState<MediaPlayerState>(MediaPlayerState.Stopped);\n\n    const [volume, setVolume] = useState(1);\n\n    const [streams, setStreams] = useState<Stream[]>();\n\n    const [currentStream, setCurrentSteam] = useState<Stream>();\n\n    const [streamURL, setStreamURL] = useState();\n\n    useEffect(() => () =>\n        clearTimeout(setTimeoutReplayRef.current)\n        , []);\n\n    useEffect(() => {\n        (async () => {\n            let streams: Stream[] = config.mediaPlayerStreams;\n            try {\n                const urlSearchParams = new URLSearchParams(window.location.search);\n                const params = Object.fromEntries(urlSearchParams.entries());\n                if (params.playlist) {\n                    streams = await loadPlaylist(params.playlist);\n                }\n            } catch (error) {\n                console.error('Unable to load custom playlist', error);\n            }\n            setStreams(streams);\n        })();\n    }, []);\n\n    useEffect(() =>\n        setCurrentSteam(\n            streams?.find(stream => stream.id === streamID)\n        )\n        , [streamID, streams]);\n\n    useEffect(() => {\n        (async () => {\n            let url;\n            let hasError = false;\n            setMediaPlayerState(MediaPlayerState.Loading);\n\n            try {\n                if (currentStream) {\n                    if (typeof currentStream.url === 'function') {\n                        url = await currentStream.url();\n                    } else {\n                        url = currentStream.url;\n                    }\n                }\n            } catch (error) {\n                console.error('Unable to get custom URL', error);\n                hasError = true;\n            }\n\n            if (hasError) {\n                setMediaPlayerState(MediaPlayerState.Error);\n                retryStream(currentStream);\n            } else {\n                setMediaPlayerState(\n                    url ? MediaPlayerState.Loading : MediaPlayerState.Stopped\n                );\n            }\n            setStreamURL(url);\n        })()\n    }, [currentStream]);\n\n    const retryStream = (currentStream: Stream | undefined) => {\n        clearTimeout(setTimeoutReplayRef.current);\n        setTimeoutReplayRef.current = setTimeout(() => {\n            if (currentStream) {\n                setCurrentSteam({ ...currentStream });\n            }\n        }, streamErrorRetryMs) as any;\n    }\n\n    const loadPlaylist = async (url: string): Promise<Stream[]> => {\n        const response = await fetch(url);\n        const playlist = await response.text();\n        const streams = playlist\n            .split('#EXTINF:')\n            .reduce(\n                (acc, curr, index) => {\n                    const line = curr.split(',');\n                    if (line.length === 2) {\n                        const streamNameAndUrl = line[1].split('\\n');\n                        acc.push({\n                            id: index.toString(),\n                            name: streamNameAndUrl[0],\n                            url: streamNameAndUrl[1]\n                                .replace('http://', 'https://'),\n                            isRadio: false,\n                        });\n                    }\n                    return acc;\n                }, [] as Stream[]);\n        return streams;\n    }\n\n    const handleChannelSelection = (streamID: string) => {\n        clearTimeout(setTimeoutReplayRef.current);\n        setSteamID(streamID);\n        localStorage.setItem(streamIDLocalStorageKey, streamID);\n    }\n\n    const handleVolumeChange = (event: any) =>\n        setVolume(parseFloat(event.target.value));\n\n    const handleReactPlayerOnPlay = () => {\n        setMediaPlayerState(MediaPlayerState.Playing);\n    }\n\n    const handleReactPlayerError = (error: any, errorInfo: any) => {\n        setMediaPlayerState(MediaPlayerState.Error);\n        console.error('React player error:', error, errorInfo);\n        if (errorInfo?.details === 'manifestLoadError' ||\n            errorInfo?.details === 'manifestLoadTimeOut' ||\n            errorInfo?.details === 'bufferStalledError') {\n            retryStream(currentStream);\n        }\n    }\n\n    const disableTouchProps = {\n        onTouchEnd: (event: any) =>\n            event.stopPropagation(),\n        onMouseUp: (event: any) =>\n            event.stopPropagation(),\n    };\n\n    return <div className=\"MediaPlayer\" >\n        <div className=\"MediaPlayerScreen\">\n            {(mediaPlayerState === MediaPlayerState.Stopped) &&\n                <div className=\"MediaPlayerScreen-info\">\n                    <h1>Media Player 📺</h1>\n                    When a channel is playing swipe in the clock area to go to the next screen.\n                </div>\n            }\n            {(mediaPlayerState === MediaPlayerState.Error) &&\n                <div className=\"MediaPlayerScreen-status\">\n                    <h1>😢 Error</h1>\n                    We are having problems loading {currentStream?.name}.\n                </div>\n            }\n            {(mediaPlayerState === MediaPlayerState.Loading) &&\n                <div className=\"MediaPlayerScreen-status\">\n                    <h1>⏳</h1>\n                    Loading {currentStream?.name}...\n                </div>\n            }\n            {(mediaPlayerState === MediaPlayerState.Playing && currentStream?.isRadio) &&\n                <div className=\"MediaPlayerScreen-status\">\n                    <h2>📻{currentStream.name}</h2>\n                    <h1><Time /></h1>\n                </div>\n            }\n            {\n                mediaPlayerState !== MediaPlayerState.Stopped &&\n                mediaPlayerState !== MediaPlayerState.Error &&\n                <ReactPlayer\n                    className=\"MediaPlayerReactPlayer\"\n                    width='100%'\n                    height='100%'\n                    url={streamURL}\n                    playing={true}\n                    controls={false}\n                    loop={true}\n                    volume={volume}\n                    onPlay={() => handleReactPlayerOnPlay()}\n                    onError={(error: any, errorObject: any) =>\n                        handleReactPlayerError(error, errorObject)}\n                />\n            }\n        </div>\n\n        <div className=\"MediaPlayerBottom\">\n\n            <div>\n                <Time />\n            </div>\n            <div>\n                <Weather simple={true} />\n            </div>\n            <div {...disableTouchProps}>\n                <input type='range'\n                    min={0} max={1}\n                    step='any'\n                    value={volume}\n                    onChange={handleVolumeChange} />\n            </div>\n            <div {...disableTouchProps}>\n                <div className=\"select is-small is-dark\">\n                    <select\n                        value={streamID || ''}\n                        onChange={event => handleChannelSelection(event.target.value)}>\n                        <option\n                            value=''>\n                            ⇨ Choose channel\n                        </option>\n                        {streams &&\n                            streams.map((stream: any, key: number) =>\n                                <option\n                                    key={key}\n                                    value={stream.id}>\n                                    {stream.name}\n                                </option>)}\n                    </select>\n                </div>\n\n            </div>\n        </div>\n    </div>;\n}\n\nexport default MediaPlayer;\n","import './MainScreen.scss';\nimport Time from './components/Time';\nimport Weather from './components/Weather';\nimport {\n    useState,\n    useEffect,\n} from 'react';\nimport config from '../config';\n\nconst backgrounds = Array.from(Array(40).keys())\n    .map(index => `d${index + 1}.jpeg`\n    );\n\nconst backgroundImageUpdateIntervalSeconds\n    = config.backgroundImageUpdateIntervalSeconds;\n\nfunction MainScreen() {\n    const [backgroundURL, setBackgroundURL] = useState(getRandomBackground());\n\n    useEffect(() => {\n        const timerID = setInterval(() => setBackgroundURL(\n            getRandomBackground()),\n            backgroundImageUpdateIntervalSeconds * 1000\n        );\n        return () => clearInterval(timerID);\n    }, []);\n\n    function getRandomBackground() {\n        return backgrounds[Math.floor(Math.random() * backgrounds.length)];\n    }\n\n    return <div\n        className=\"MainScreen\"\n        style={{\n            backgroundImage:\n                `url(${process.env.PUBLIC_URL}/backgrounds/${backgroundURL})`\n        }}>\n        <div className=\"top\" >\n            <Time />\n        </div>\n        <div className=\"bottom\">\n            <Weather />\n        </div>\n    </div>;\n}\n\nexport default MainScreen;\n","import './App.scss';\nimport {\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Route,\n  useHistory,\n  useLocation,\n  Switch,\n} from 'react-router-dom';\n\nimport {\n  TransitionGroup,\n  CSSTransition,\n} from 'react-transition-group';\n\nimport MediaPlayer from './screens/MediaPlayer';\nimport MainScreen from './screens/MainScreen';\n\nconst config = {\n  routes: [\n    {\n      path: \"/MediaPlayer\",\n      Component: MediaPlayer,\n    },\n    {\n      path: \"/\",\n      Component: MainScreen,\n    },\n  ],\n}\n\nfunction App() {\n\n  // const screenNodeRef = useRef(null);\n\n  const [swipeDirection, setSwipeDirection]\n    = useState<'left' | 'right'>('left');\n\n  const touchPositionsRef = useRef<TouchPosition>({\n    start: 0,\n    end: 0\n  });\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const getPosition = (event: any): number =>\n    event.clientX || (\n      (event.targetTouches && event.targetTouches.length > 0) ?\n        event.targetTouches[0].clientX : 0\n    );\n\n  const handleTouchStart = (event: any) => {\n    touchPositionsRef.current.start = getPosition(event);\n    touchPositionsRef.current.end = getPosition(event);\n  }\n\n  const handleTouchMove = (event: any) => {\n    touchPositionsRef.current.end = getPosition(event);\n  }\n\n  const handleTouchEnd = (event: any) => {\n    const currentLocation = history.location.pathname;\n    const touchPositions = touchPositionsRef.current;\n    const currentLocationRouteIndex = config.routes.findIndex(\n      (route: any) =>\n        route.path === currentLocation\n    );\n\n    let nextLocationRouteIndex = null;\n\n    if (touchPositions.start - touchPositions.end > 50) {\n      nextLocationRouteIndex = currentLocationRouteIndex - 1;\n      if (nextLocationRouteIndex < 0) {\n        nextLocationRouteIndex = config.routes.length - 1;\n      }\n      setSwipeDirection('left');\n    };\n\n    if (touchPositions.start - touchPositions.end < -50) {\n      nextLocationRouteIndex = currentLocationRouteIndex + 1;\n      if (nextLocationRouteIndex > config.routes.length - 1) {\n        nextLocationRouteIndex = 0;\n      }\n      setSwipeDirection('right');\n    }\n\n    if (nextLocationRouteIndex !== null) {\n      history.push(config.routes[nextLocationRouteIndex].path);\n    }\n    touchPositions.start = 0;\n\n  }\n  return (\n    <div\n      className={`App AppSwipe-${swipeDirection}`}\n      onMouseDown={handleTouchStart}\n      onMouseMove={handleTouchMove}\n      onMouseUp={handleTouchEnd}\n\n      onTouchEnd={handleTouchEnd}\n      onTouchMove={handleTouchMove}\n      onTouchStart={handleTouchStart}\n    >\n      <div className=\"AppPortraitWarning\">\n        ⚠️ Please rotate your device.\n      </div>\n\n      <TransitionGroup\n        component={null}\n      >\n        <CSSTransition\n          key={location.pathname}\n          classNames=\"AppScreen\"\n          timeout={300}\n        /* FIXME: findDomNode warning*/\n        /* nodeRef={screenNodeRef} */\n        >\n          <Switch location={location}>\n            {config.routes.map(({ path, Component }) => (\n              <Route\n                key={path}\n                path={path}\n              >\n                <div\n                  /* ref={screenNodeRef} */\n                  className=\"AppScreen\"  >\n                  <Component />\n                </div>\n              </Route>\n            ))}\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n} from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}