{"version":3,"sources":["screens/Time.tsx","screens/Weather.tsx","screens/Video.tsx","config.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Time","Weather","style","backgroundColor","width","height","Video","origin","encodeURIComponent","document","location","src","config","youtubeVideoURL","className","allow","title","routes","path","component","App","React","useState","touchStart","setTouchStart","touchEnd","setTouchEnd","history","useHistory","getPosition","event","clientX","targetTouches","handleTouchStart","handleTouchMove","handleTouchEnd","preventDefault","currentLocation","pathname","currentLocationRouteIndex","findIndex","route","nextLocationRouteIndex","length","push","onMouseDown","onMouseMove","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","map","i","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"kRAIeA,MAJf,WACI,OAAO,uCCGIC,MAJf,WACI,OAAO,qBAAKC,MAAO,CAACC,gBAAiB,MAAOC,MAAO,OAAQC,OAAQ,QAA5D,sB,MCiBIC,MAdf,WACI,IAAMC,EAASC,mBAAmBC,SAASC,SAASH,QAC9CI,EAAG,UAAMC,EAAOC,gBAAb,8DAAkFN,EAAlF,8FAET,OAAO,qBAAKO,UAAU,QAAf,SACH,wBACIC,MAAM,WACNJ,IAAKA,EACLK,MAAM,4BCRZJ,EAAa,CAEnBA,gBAAyB,6CAEzBA,EAAOK,OAAS,CACZ,CACIC,KAAM,SACNC,UAAWb,GAEf,CACIY,KAAM,WACNC,UAAWlB,GAEf,CACIiB,KAAM,IACNC,UAAWnB,IAIJY,QC+DAQ,MA5Ef,WACE,MAAoCC,IAAMC,SAAS,GAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCH,IAAMC,SAAS,GAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,cAEVC,EAAc,SAACC,GAAD,OAClBA,EAAMC,SAAWD,EAAME,cAAc,GAAGD,SAEpCE,EAAmB,SAACH,GACxBN,EAAcK,EAAYC,IAC1BJ,EAAYG,EAAYC,KAGpBI,EAAkB,SAACJ,GACvBJ,EAAYG,EAAYC,KAGpBK,EAAiB,SAACL,GAEtBA,EAAMM,iBAEN,IAAMC,EAAkBV,EAAQjB,SAAS4B,SACnCC,EAA4B3B,EAAOK,OAAOuB,WAC9C,SAACC,GAAD,OACEA,EAAMvB,OAASmB,KAGfK,EAAyB,KAEzBnB,EAAaE,EAAW,MAC1BiB,EAAyBH,EAA4B,GACxB,IAC3BG,EAAyB9B,EAAOK,OAAO0B,OAAS,GAKhDpB,EAAaE,GAAY,MAC3BiB,EAAyBH,EAA4B,GACxB3B,EAAOK,OAAO0B,OAAS,IAClDD,EAAyB,GAKC,OAA3BA,GACDf,EAAQiB,KAAKhC,EAAOK,OAAOyB,GAAwBxB,MAErDM,EAAc,IAGhB,OACE,qBAAKV,UAAU,MACb+B,YAAaZ,EACba,YAAaZ,EACba,UAAWZ,EAEXa,WAAYb,EACZc,YAAaf,EACbgB,aAAcjB,EAPhB,SASE,cAAC,IAAD,UACGrB,EAAOK,OAAOkC,KAAI,SAACV,EAAYW,GAAb,OACjB,cAAC,IAAD,CAEElC,KAAMuB,EAAMvB,KACZmC,OAAQ,SAAAC,GAAK,OACX,cAACb,EAAMtB,UAAP,2BAAqBmC,GAArB,IAA4BrC,OAAQwB,EAAMxB,YAHvCmC,WC5DFG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFxD,SAASyD,eAAe,SAM1BX,M","file":"static/js/main.ef5c4e1f.chunk.js","sourcesContent":["function Time() {\n    return <h2>Time</h2>;\n}\n\nexport default Time;","function Weather() {\n    return <div style={{backgroundColor: 'red', width: '100%', height: '100%'}}>Weather</div>;\n}\n\nexport default Weather;","import config from '../config';\n\nimport './Video.css';\n\nfunction Video() {\n    const origin = encodeURIComponent(document.location.origin);\n    const src = `${config.youtubeVideoURL}?controls=0&autoplay=1&mute=0&enablejsapi=1&origin=${origin}&playsinline=1&showinfo=0&rel=0&iv_load_policy=3&modestbranding=1&enablejsapi=1&widgetid=3`;\n\n    return <div className=\"Video\">\n        <iframe\n            allow=\"autoplay\"\n            src={src}\n            title=\"YouTube video player\"\n        >\n        </iframe>\n    </div>;\n}\n\nexport default Video;","import Time from './screens/Time';\nimport Weather from './screens/Weather';\nimport Video from './screens/Video';\n\nconst config:any = {};\n\nconfig.youtubeVideoURL = 'https://www.youtube.com/embed/sPgqEHsONK8';\n\nconfig.routes = [\n    {\n        path: \"/video\",\n        component: Video\n    },\n    {\n        path: \"/weather\",\n        component: Weather\n    },\n    {\n        path: \"/\",\n        component: Time\n    },\n];\n\nexport default config;\n","import './App.css';\nimport React from 'react';\nimport {\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom';\n\nimport config from './config';\n\nfunction App() {\n  const [touchStart, setTouchStart] = React.useState(0);\n  const [touchEnd, setTouchEnd] = React.useState(0);\n  const history = useHistory();\n\n  const getPosition = (event: any): number =>\n    event.clientX || event.targetTouches[0].clientX;\n\n  const handleTouchStart = (event: any) => {\n    setTouchStart(getPosition(event));\n    setTouchEnd(getPosition(event));\n  }\n    \n  const handleTouchMove = (event: any) => {\n    setTouchEnd(getPosition(event));\n  }\n\n  const handleTouchEnd = (event: any) => {\n\n    event.preventDefault();\n\n    const currentLocation = history.location.pathname;\n    const currentLocationRouteIndex = config.routes.findIndex(\n      (route: any) =>\n        route.path === currentLocation\n    );\n\n    let nextLocationRouteIndex = null;\n\n    if (touchStart - touchEnd > 150) {\n      nextLocationRouteIndex = currentLocationRouteIndex - 1;\n      if (nextLocationRouteIndex < 0) {\n        nextLocationRouteIndex = config.routes.length - 1;\n      }\n      \n    };\n\n    if (touchStart - touchEnd < -150) {\n      nextLocationRouteIndex = currentLocationRouteIndex + 1;\n      if (nextLocationRouteIndex > config.routes.length - 1) {\n        nextLocationRouteIndex = 0;\n      }\n     \n    }\n\n    if(nextLocationRouteIndex !== null) {\n      history.push(config.routes[nextLocationRouteIndex].path);\n    }\n    setTouchStart(0);\n    \n  }\n  return (\n    <div className=\"App\"\n      onMouseDown={handleTouchStart}\n      onMouseMove={handleTouchMove}\n      onMouseUp={handleTouchEnd}\n\n      onTouchEnd={handleTouchEnd}\n      onTouchMove={handleTouchMove}\n      onTouchStart={handleTouchStart}\n    >\n      <Switch>\n        {config.routes.map((route: any, i: number) => (\n          <Route\n            key={i}\n            path={route.path}\n            render={props => (\n              <route.component {...props} routes={route.routes} />\n            )}\n          />\n        ))}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}